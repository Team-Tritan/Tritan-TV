<!DOCTYPE html>
<html>
<head>
    <title>Tritan Radio</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/room.css">
    <script src="/client/socket.io/client-dist/socket.io.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/video.js/7.8.1/video-js.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/video.js/7.8.1/video.min.js"></script>
<script src='/js/youtube.js'></script>
</head>
<body>
    <div class='loader-info' id='loader'>
        <h1>Loading... </h1>
        <br>
        <div class='contianer'>
            <div class="dash uno"></div>
            <div class="dash dos"></div>
            <div class="dash tres"></div>
            <div class="dash cuatro"></div>
        </div>
        <br>
        <br>
        <p>Initalizing Websocket Connection</p>
    </div>


    <div class='main-content' id='main-content' style='display: none;'>
        <div class='grid-container'>
            <div class='left-page'>

            </div>

            <div class='chatbox-holder'>
                <div class='chatbox'>
                    <div class='message-holder' id='message-holder'>

                    </div>
                    <div class='chatbox-below'>
                        <input id='message' class='chat-box-input'>
                        <button class='button' id='send-button' type="button">Send</button>
                    </div>
                </div>
                
                <div class='mediaControls'>
                    <div class='chatbox-below'>
                        <input id='message' class='chat-box-input'>
                        <button class='button' id='send-button' type="button">Send</button>
                    </div>
                    <div class='message-holder' id='message-holder'>

                    </div>
                </div>


                <div class='content'>
                    <div class='video-player' id='video-player-div'>
                        <video
                        id="vid1"
                        class="video-js vjs-default-skin"
                        controls
                        width="1280"
                        height="720"
                        data-setup='{ "techOrder": ["youtube"], "sources": [{ "type": "video/youtube", "src": "https://www.youtube.com/watch?v=_QfPliSW83A&ab_channel=Emma"}], "youtube": { "customVars": { "wmode": "transparent" } } }'
                      >
                      </video>
                      <div class='room-info'>
                            <div class='room-info-content' style='padding: 5px; margin-top: 10px; margin-right: 10px; border: 3px solid orange; border-radius: 50%;'>
                                <img src='/assets/idle.png' height="90px">
                            </div>
                          <div class='room-info-content'>
                            <h1><%= room.name %></h1>
                            <p>Idle</p>
                          </div>
                      </div>
                    </div>
                </div>
            </div>

            <!--
            <div class='right-page' id='video'>
                <br>
                <br>
                <br>
                <input id='video-input' class='chat-box-input'>
                <button class='button' id='video-button' type="button">To queue</button>
                <iframe width='560' height='315' id='playBox' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>
    
            </div>-->
        </div>    
    </div>

</body>

<script>
    const room = JSON.parse('<%- JSON.stringify(room) %>');
    const socket = io('http://localhost/chat');
    const videos = io("http://localhost/videos");

    var myPlayer;
    videojs("vid1", {"height":"auto", "width":"auto"}).ready(function(){ 
        videos.emit('user-video-sync', { roomId:  room.id });
        myPlayer = this;  
        myPlayer.play();
        function resizeVideoJS(){
            let playerDiv =  document.getElementById('video-player-div');
            
            console.log(playerDiv.offsetWidth)
            myPlayer.width(playerDiv.offsetWidth).height(playerDiv.offsetHeight);
        }
        resizeVideoJS();

        myplayer.on('ended', () => {
            videos.emit("advance-queue", {});
            console.log("video has ended");
        });
    });


    document.addEventListener("resize", () => {
        console.log("resized")
    });

    socket.on('connect', () => {
        document.getElementById('loader').style.display = "none";
        document.getElementById("main-content").style.display = "block";
        checkOwnership();
    });

    socket.emit('join-chat', { roomId:  room.id, name: localStorage.getItem("name") ? localStorage.getItem("name") : "Anon"});
    videos.emit('join-room-queue', { roomId:  room.id });
    videos.emit('user-video-sync', { roomId:  room.id });

    videos.on("client-video-sync", data => {
        console.log(data.queue);
        if(data.queue.queue){
            if(myPlayer){
                let queue = data.queue;
                myPlayer.src([{ type: 'video/youtube', src: queue.queue[0] }]);
                myPlayer.currentTime(190);
                myPlayer.play();
                videos.emit('user-time-sync', { roomId:  room.id });
            }
        }
    });


    videos.on("send-time-sync", () => {
        console.log(myPlayer.currentTime);
    });

    socket.on(`chat-message`, data => {
        const messageHolder = document.getElementById('message-holder');
        const messageElement = document.createElement('div');
        messageElement.innerText = `${data.name}: ${data.message}`;
        messageHolder.append(messageElement);
    });

    socket.on(`system-log`, (data) => {
        const messageHolder = document.getElementById('message-holder');
        const messageElement = document.createElement('div');
        messageElement.innerText = `${data}`;
        messageElement.style.color = "grey";
        messageHolder.append(messageElement);
    });

    
    document.getElementById("send-button").addEventListener('click', () => {
        const message = document.getElementById("message").value;
        document.getElementById("message").value = "";
        socket.emit('message', { message: message });

    });

    document.getElementById("message").addEventListener('keyup', (key) => {
        if(key.keyCode == 13){
            const message = document.getElementById("message").value;
            document.getElementById("message").value = "";
            socket.emit('message', { message: message });
        }
    });

/*
    document.getElementById("video-button").addEventListener('click', () => {
        const video = document.getElementById("video-input").value;
        socket.emit(`start-video-play`, {video: video});

        
        const video = document.getElementById("video-input").value;
        var url = "https://www.youtube.com/embed/" + video;
        document.getElementById('playBox').src = url;
        
    });

    socket.on(`start-video-play-${room.id}`, (data) => {
        const video = data.video;
        var url = "https://www.youtube.com/embed/" + video + "?autoplay=1";
        document.getElementById('playBox').src = url;
    });
*/
</script>
<script src="/js/roomutils.js"></script>
</html>